"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[321],{152:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var i=t(1527),s=t(8672);const r={sidebar_label:"Type Keyword",sidebar_position:4},a="Type Keyword",o={id:"basics/type-keyword",title:"Type Keyword",description:"The type keyword in Squig is used to provide insight into the data types at runtime. It enables developers to dynamically determine the type of a variable or expression, allowing for more flexible programming.",source:"@site/docs/basics/type-keyword.md",sourceDirName:"basics",slug:"/basics/type-keyword",permalink:"/basics/type-keyword",draft:!1,unlisted:!1,editUrl:"https://github.com/Harish-M-2003/Squig-Docusaurus/tree/main/docs/basics/type-keyword.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_label:"Type Keyword",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Datatypes",permalink:"/basics/datatypes"},next:{title:"User input",permalink:"/basics/input"}},d={},l=[{value:"Syntax",id:"syntax",level:2},{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:3},{value:"Considerations",id:"considerations",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"type-keyword",children:"Type Keyword"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"type"})," keyword in Squig is used to provide insight into the data types at runtime. It enables developers to dynamically determine the type of a variable or expression, allowing for more flexible programming."]}),"\n",(0,i.jsx)(n.h2,{id:"syntax",children:"Syntax"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"type expression\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"expression"}),": The variable or expression for which you want to determine the type."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"type"})," keyword returns a string representing the data type of the specified expression. It can be used in various scenarios, such as debugging, conditional branching, or dynamic type-dependent behavior."]}),"\n",(0,i.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-squig",children:'let x : 42\r\nlet y : "Hello, Squig!"\r\n\r\nlog type x  # Output: "integer"\r\nlog type y  # Output: "string"\n'})}),"\n",(0,i.jsxs)(n.p,{children:["In the example above, the ",(0,i.jsx)(n.code,{children:"type"})," keyword is used to inspect the data type of variables ",(0,i.jsx)(n.code,{children:"x"})," and ",(0,i.jsx)(n.code,{children:"y"}),' at runtime. The resulting strings, "integer" and "string," respectively, provide valuable information about the types of the variables.']}),"\n",(0,i.jsx)(n.h2,{id:"considerations",children:"Considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"type"})," keyword is particularly useful in situations where the data type of a variable is not known beforehand or may change dynamically during program execution."]}),"\n",(0,i.jsx)(n.li,{children:"It enhances the adaptability of Squig code by allowing developers to create more generic and reusable functions that can handle different types of data."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8672:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>a});var i=t(959);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);