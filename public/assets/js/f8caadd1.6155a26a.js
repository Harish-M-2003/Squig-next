"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[871],{5006:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var t=i(1527),o=i(8672);const s={sidebar_label:"Conditionals",sidebar_position:7},r="Conditional Statements and Loops",a={id:"basics/conditionals",title:"Conditional Statements and Loops",description:"Conditional and iterative statements are fundamental programming constructs that enable dynamic control flow and repetitive execution of code blocks based on specific conditions or for a predetermined number of iterations.",source:"@site/docs/basics/conditionals.md",sourceDirName:"basics",slug:"/basics/conditionals",permalink:"/basics/conditionals",draft:!1,unlisted:!1,editUrl:"https://github.com/Harish-M-2003/Squig-Docusaurus/tree/main/docs/basics/conditionals.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_label:"Conditionals",sidebar_position:7},sidebar:"tutorialSidebar",previous:{title:"Operators",permalink:"/basics/operators"},next:{title:"Functions",permalink:"/basics/functions"}},c={},l=[{value:"1. if Statement",id:"1-if-statement",level:2},{value:"2. if-else Statement",id:"2-if-else-statement",level:2},{value:"3. if-elif-else Statement",id:"3-if-elif-else-statement",level:2},{value:"4. switch Statement",id:"4-switch-statement",level:2},{value:"5. for Loop",id:"5-for-loop",level:2},{value:"Example",id:"example",level:3},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"conditional-statements-and-loops",children:"Conditional Statements and Loops"}),"\n",(0,t.jsx)(n.p,{children:"Conditional and iterative statements are fundamental programming constructs that enable dynamic control flow and repetitive execution of code blocks based on specific conditions or for a predetermined number of iterations."}),"\n",(0,t.jsxs)(n.p,{children:["Squig provides a variety of control flow statements to facilitate decision-making and iterative processes in your code. Here are the key features: ",(0,t.jsx)(n.code,{children:"if"}),", ",(0,t.jsx)(n.code,{children:"if-else"}),", ",(0,t.jsx)(n.code,{children:"if-elif-else"}),", ",(0,t.jsx)(n.code,{children:"switch"}),", and ",(0,t.jsx)(n.code,{children:"for"})," loop."]}),"\n",(0,t.jsx)(n.admonition,{title:"Brace Closure and Colon Usage",type:"warning",children:(0,t.jsxs)(n.p,{children:["Check your braces "," and colons :! Incorrect usage could lead to bugs in your code. Keep it concise, keep it clean, and your Squig adventures will be smooth sailing."]})}),"\n",(0,t.jsx)(n.h2,{id:"1-if-statement",children:"1. if Statement"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"if"})," statement is used for simple conditional branching. It executes a block of code only if the specified condition evaluates to true."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"\r\nif { condition } : {\r\n\r\n    # Code to execute if the condition is true\r\n\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"2-if-else-statement",children:"2. if-else Statement"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"if-else"})," statement extends the ",(0,t.jsx)(n.code,{children:"if"})," statement by providing an alternative block of code to execute if the condition is false."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"if { condition } : {\r\n    \r\n    # Code to execute if the condition is true\r\n\r\n} else : {\r\n\r\n    # Code to execute if the condition is false\r\n\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"3-if-elif-else-statement",children:"3. if-elif-else Statement"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"if-elif-else"})," statement is an extension of the ",(0,t.jsx)(n.code,{children:"if-else"})," statement that allows for multiple conditions to be checked sequentially."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"if { condition1 } : {\r\n\r\n    # Code to execute if condition1 is true\r\n\r\n} elif { condition2 } : {\r\n\r\n    # Code to execute if condition2 is true\r\n\r\n} else : {\r\n\r\n    # Code to execute if none of the conditions are true\r\n\r\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"4-switch-statement",children:"4. switch Statement"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"switch"})," statement provides an efficient way to handle multiple possible conditions. It compares the value of an expression against various cases and executes the corresponding block of code."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-squig",children:"switch { expression } : {\r\n\r\n    case value1: {\r\n\r\n        # Code to execute if expression equals value1\r\n\r\n    }\r\n    case value2: {\r\n\r\n        # Code to execute if expression equals value2\r\n\r\n    }\r\n\r\n    # ... additional cases ...\r\n\r\n    default : {\r\n\r\n        # Code to execute if none of the cases match\r\n\r\n    }\r\n\r\n}\r\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"5-for-loop",children:"5. for Loop"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"for"})," loop in Squig is used for iterating over a sequence (e.g., range of numbers) or elements in an array."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-squig",children:"for initializer{start , stop , step} : {\r\n\r\n    // Code to execute in each iteration\r\n\r\n}\r\n\r\nfor initializer{sequence} : {\r\n\r\n    // Code to execute in each iteration\r\n\r\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"initializer"}),": Executed once before the loop starts."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"start"})," and ",(0,t.jsx)(n.strong,{children:"step"})," are optional"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-js",children:'for i{10} {\r\n\r\n    log "Iteration " , i;\r\n    \r\n}\r\n\r\n\r\nlet message : "Hello , world"\r\n\r\nfor i{message} {\r\n\r\n    log i;\r\n    \r\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["In this example, the ",(0,t.jsx)(n.code,{children:"for"}),' loop iterates five times, printing "Iteration 0" through "Iteration 4."']}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsxs)(n.p,{children:["The combination of ",(0,t.jsx)(n.code,{children:"if"}),", ",(0,t.jsx)(n.code,{children:"if-else"}),", ",(0,t.jsx)(n.code,{children:"if-elif-else"}),", ",(0,t.jsx)(n.code,{children:"switch"}),", and ",(0,t.jsx)(n.code,{children:"for"})," loop provides Squig programmers with powerful tools to control the flow of their code, making it expressive and adaptable to different scenarios."]})]})}function h(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8672:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>r});var t=i(959);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);