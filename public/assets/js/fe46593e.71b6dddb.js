"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[588],{5016:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var t=r(1527),i=r(8672);const s={sidebar_label:"Project Structure",sidebar_position:1,title:"Project Structure"},o=void 0,d={id:"developer-docs/project-structure",title:"Project Structure",description:"The Squig project is organized into several modules, each responsible for a specific aspect of the language implementation. Here's an overview of the project structure:",source:"@site/docs/developer-docs/project-structure.md",sourceDirName:"developer-docs",slug:"/developer-docs/project-structure",permalink:"/developer-docs/project-structure",draft:!1,unlisted:!1,editUrl:"https://github.com/Harish-M-2003/Squig-Docusaurus/tree/main/docs/developer-docs/project-structure.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_label:"Project Structure",sidebar_position:1,title:"Project Structure"},sidebar:"tutorialSidebar",previous:{title:"Developer Docs",permalink:"/category/developer-docs"},next:{title:"Token",permalink:"/developer-docs/token"}},l={},c=[{value:"Contributing Guidelines",id:"contributing-guidelines",level:2},{value:"Setting Up the Development Environment",id:"setting-up-the-development-environment",level:2},{value:"Module Overview",id:"module-overview",level:2},{value:"Lexer",id:"lexer",level:3},{value:"Parser",id:"parser",level:3},{value:"Interpreter",id:"interpreter",level:3},{value:"Token",id:"token",level:3},{value:"Types",id:"types",level:3},{value:"Node",id:"node",level:3},{value:"Error",id:"error",level:3},{value:"Position",id:"position",level:3}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"The Squig project is organized into several modules, each responsible for a specific aspect of the language implementation. Here's an overview of the project structure:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Lexer.py"}),": Module for tokenizing source code."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Parser.py"}),": Module for parsing tokenized code into an abstract syntax tree (AST)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Interpreter.py"}),": Module for interpreting the AST and executing Squig code."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Token.py"}),": Module defining token types used by the lexer."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Types.py"}),": Module defining Squig data types and type checking logic."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Node.py"}),": Module defining nodes used in the AST representation."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"SymbolTable.py"}),": Module which contain all the built in functions and stores all global variables."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Error.py"}),": Module defining error types and handling logic."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Position.py"}),": Module defining position tracking for error reporting."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"contributing-guidelines",children:"Contributing Guidelines"}),"\n",(0,t.jsxs)(n.p,{children:["Before contributing to Squig, please read our ",(0,t.jsx)(n.a,{href:"#",children:"Contributing Guidelines"}),". These guidelines outline the process for submitting bug reports, feature requests, and code contributions."]}),"\n",(0,t.jsx)(n.h2,{id:"setting-up-the-development-environment",children:"Setting Up the Development Environment"}),"\n",(0,t.jsxs)(n.p,{children:["To set up your development environment for Squig, follow the steps outlined in the ",(0,t.jsx)(n.a,{href:"#",children:"Development Environment Setup Guide"}),". This guide covers setting up dependencies, installing development tools, and configuring your environment for Squig development."]}),"\n",(0,t.jsx)(n.h2,{id:"module-overview",children:"Module Overview"}),"\n",(0,t.jsx)(n.h3,{id:"lexer",children:"Lexer"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Lexer"})," module is responsible for tokenizing Squig source code. It processes input text and generates a stream of tokens representing the individual components of the code."]}),"\n",(0,t.jsx)(n.h3,{id:"parser",children:"Parser"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Parser"})," module parses tokenized code into an abstract syntax tree (AST). It analyzes the structure of the code and constructs a hierarchical representation that captures its syntactic relationships."]}),"\n",(0,t.jsx)(n.h3,{id:"interpreter",children:"Interpreter"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Interpreter"})," module interprets the AST generated by the parser and executes Squig code. It traverses the AST and performs the necessary actions to execute each statement and expression in the code."]}),"\n",(0,t.jsx)(n.h3,{id:"token",children:"Token"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Token"})," module defines the token types used by the lexer. It includes classes for representing different types of tokens, such as keywords, identifiers, literals, and operators."]}),"\n",(0,t.jsx)(n.h3,{id:"types",children:"Types"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Types"})," module defines Squig data types and provides type checking functionality. It includes classes and functions for representing and manipulating data types in Squig programs."]}),"\n",(0,t.jsx)(n.h3,{id:"node",children:"Node"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Node"})," module defines the node types used in the AST representation. It includes classes for representing various syntactic constructs, such as statements, expressions, and declarations."]}),"\n",(0,t.jsx)(n.h3,{id:"error",children:"Error"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Error"})," module defines error types and provides error handling functionality. It includes classes for representing different types of errors encountered during lexing, parsing, and interpretation."]}),"\n",(0,t.jsx)(n.h3,{id:"position",children:"Position"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"Position"})," module defines position tracking functionality for error reporting. It includes classes for representing positions within the source code and calculating line and column numbers."]})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8672:(e,n,r)=>{r.d(n,{Z:()=>d,a:()=>o});var t=r(959);const i={},s=t.createContext(i);function o(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);